# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

name: build

on:
  push:
    branches: [ "v1.1/main" ]
  pull_request:
    branches: [ "v1.1/main" ]

jobs:
  build:
    name: build project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v3
    - name: install dependencies
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - name: run tests
      run: npm test
    - name: run sonar scan
      # You can pin the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
      with:
        # Additional arguments for the sonarcloud scanner
        args:
          # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
          # mandatory
          -Dsonar.projectKey=martinmouly_poc-devops-itt
          -Dsonar.organization=itt-architecture
          -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
          -Dsonar.exclusions=coverage/**,server.js
          -Dsonar.coverage.exclusions=server/database/connection.js,server/model/model.js,server/routes/router.js,server/services/render.js,test/**,assets/**
